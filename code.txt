const BUTTON_PRESS_DURATION = 2000
const IDLE = 0
const BUTTON_PRESSED= 1
const BUTTON_RELEASED= 2
const LIGHT_ON = 3
const CHANGE_COLOR = 4
const FLASHING_LIGHT_ON = 5
const FLASHING_LIGHT_OFF = 6
const BUTTON_PRESSED_TIME = 50
const buttonSensorPin = DigitalPin.P1


// Light on == press light off, two presses light flash, hold press change light

let button_Pressed = false
let button_Pressed_Times = 0 
let buttonPressedLoops = 0
let buttonReading = 0
let state = IDLE
let strip = neopixel.create(DigitalPin.P0, 16, NeoPixelMode.RGB)


basic.forever(function () {
    updateSystem(state)
    state = evaluateState(state)
    reactToState(state)
    serial.writeLine(state.toString())
})


function reactToState(state: number) {
    switch (state) {

        case IDLE:
            idle_output()
            break


        case LIGHT_ON:
            light_on_output()
            break


        case CHANGE_COLOR:
            change_color_output()
            break

        
        case FLASHING_LIGHT_ON:
            flashlight_on_output()
            break

        
        case FLASHING_LIGHT_OFF:
            flashlight_off_output()
            break

        

    }

}


function updateSystem(state: number) {
    buttonReading = pins.digitalReadPin(DigitalPin.P1)
    if (buttonReading == 1){
        button_Pressed = true
    }
    else if (buttonReading == 0){
        button_Pressed = false
    }
    if (state == BUTTON_PRESSED){
        buttonPressedLoops += 1
    }
    else if (state == BUTTON_RELEASED){
        button_Pressed_Times += 1
    }
    else if (state == IDLE){
        buttonPressedLoops = 0
        button_Pressed_Times = 0
    }
    else if (state == CHANGE_COLOR){
        buttonPressedLoops = 0
        button_Pressed_Times = 1
    }
}

//The state is really determined by which range the distance reading is in. 
//To do ranges, an if/then statement is easier than a case structure.

function evaluateState(state: number) {

    //We just compare the distance reading to the edge values and decide which state we are in.
    switch (state) {
        case BUTTON_PRESSED:
            if (button_Pressed == false){
                return BUTTON_RELEASED
            }
            if (buttonPressedLoops > BUTTON_PRESSED_TIME){
                return CHANGE_COLOR
            }
            break
        case BUTTON_RELEASED:
            if (button_Pressed_Times == 1){
                return LIGHT_ON
            }
            else if (button_Pressed_Times == 2){
                return FLASHING_LIGHT_ON
            }
            else if (button_Pressed_Times == 3){
                return FLASHING_LIGHT_OFF
            }
            else if (button_Pressed_Times == 4){
                return IDLE
            }
            break
        case LIGHT_ON:
            if (button_Pressed == true){
                return BUTTON_PRESSED
            }
            break;
        
        case CHANGE_COLOR:
            if (button_Pressed == true){
                return LIGHT_ON
            }
            break;
        
        case FLASHING_LIGHT_ON:   
            if (button_Pressed == true){
                return BUTTON_PRESSED
            }
            break;

        case FLASHING_LIGHT_OFF:
            if (button_Pressed == true){
                return BUTTON_PRESSED
            }
            break;

        case IDLE:
            if (button_Pressed == true){
                return BUTTON_PRESSED
            }
            break
        
    }
    return state
}



function idle_output(){
    strip.show()
    strip.clear()
    basic.showIcon(IconNames.No)
}

function light_on_output(){
    strip.showColor(neopixel.colors(NeoPixelColors.White))
    basic.showIcon(IconNames.Square)
}

function change_color_output(){
    strip.showColor(neopixel.colors(NeoPixelColors.Yellow))
    basic.showIcon(IconNames.Heart)
}

function flashlight_on_output(){
    strip.showColor(neopixel.colors(NeoPixelColors.White))
    strip.clear()
    basic.pause(200)
    strip.show()
    basic.showIcon(IconNames.Yes)
}

function flashlight_off_output(){
    strip.showColor(neopixel.colors(NeoPixelColors.White))
    basic.showIcon(IconNames.Diamond)
}

//Surprise! I've edited your code. You should approve this addition of very helpful information to your repository.
//You should accept Mr.Weinberg's changes
